version: '3'

services:
  app:
    image: "${APP_DOCKER_IMAGE:-ghcr.io/bolanebyla/thesisdjangosecurity/thesis_django_security_app:latest}"
    logging:
      options:
        max-size: "200M"
        max-file: "4"
    restart: unless-stopped
    volumes:
      - ./src/static:/usr/src/app/static
    depends_on:
      - db
    environment:
      SECRET_KEY: "${APP_SECRET_KEY}"
      DEBUG: "${APP_DEBUG}"
      ALLOWED_HOSTS: "${APP_ALLOWED_HOSTS}"
      DATABASE_URL: "psql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"

  nginx:
    image: nginx:1.22.0-alpine
    logging:
      options:
        max-size: "200M"
        max-file: "4"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src/static:/usr/src/app/static
      - ./nginx/conf:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

  db:
    image: postgres:14.3-alpine
    logging:
      options:
        max-size: "200M"
        max-file: "4"
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"